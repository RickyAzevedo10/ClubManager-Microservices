name: dockercompose4230675631978452890
services:
  financial:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: Financial/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: financial
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  gateway:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: Gateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: gateway
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  identity:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: Identity/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: identity
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  infrastructures:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: Infrastructures/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:8080
      RabbitMQ__Host: amqp://message-broker:5672
      RabbitMQ__Password: guest
      RabbitMQ__Username: guest
    image: infrastructures
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "6080"
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "6081"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  infrastructuresdatabase:
    container_name: InfrastructuresDatabase
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: P@ssw0rd2024!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1633"
      protocol: tcp
  membersteams:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: MembersTeams/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:8080
      RabbitMQ__Host: amqp://message-broker:5672
      RabbitMQ__Password: guest
      RabbitMQ__Username: guest
    image: membersteams
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "7080"
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "7081"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  membersteamsdatabase:
    container_name: MembersTeamsDatabase
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: P@ssw0rd2024!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1733"
      protocol: tcp
  redis:
    container_name: redis
    image: redis:latest
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
  trainingcompetition:
    build:
      context: C:\Users\Ricardo Azevedo\Desktop\Tese\MicroServices\ClubManager
      dockerfile: TrainingCompetition/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:8080
      RabbitMQ__Host: amqp://message-broker:5672
      RabbitMQ__Password: guest
      RabbitMQ__Username: guest
    image: trainingcompetition
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "8081"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ricardo Azevedo\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  trainingcompetitiondatabase:
    container_name: TrainingCompetitionDatabase
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: P@ssw0rd2024!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1833"
      protocol: tcp
networks:
  default:
    name: dockercompose4230675631978452890_default
  proxybackend:
    name: proxybackend
    driver: bridge